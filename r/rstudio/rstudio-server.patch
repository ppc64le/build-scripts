diff --git a/src/cpp/session/SessionOptions.cpp b/src/cpp/session/SessionOptions.cpp
index 52735a44a7..edc709bb2e 100644
--- a/src/cpp/session/SessionOptions.cpp
+++ b/src/cpp/session/SessionOptions.cpp
@@ -61,8 +61,6 @@
 # define kQuartoArch "aarch64"
 #elif defined(__amd64__)
 # define kQuartoArch "x86_64"
-#else
-# error "unknown or unsupported platform architecture"
 #endif
 
 using namespace rstudio::core;
@@ -633,8 +631,9 @@ void Options::resolvePandocPath(const FilePath& resourcePath,
    else
    {
       FilePath resolvedPath = resourcePath.completePath(*pPath);
-      FilePath archPath = resolvedPath.completeChildPath(kQuartoArch);
-      *pPath = (archPath.exists() ? archPath : resolvedPath).getAbsolutePath();
+      //FilePath archPath = resolvedPath.completeChildPath(kQuartoArch);
+      //*pPath = (archPath.exists() ? archPath : resolvedPath).getAbsolutePath();
+      *pPath = resolvedPath.getAbsolutePath();
    }
 }
 
@@ -693,9 +692,9 @@ void Options::resolvePandocPath(const FilePath& resourcePath,
 {
    // pandoc might be an architecture-specific sub-directory, to handle that
    FilePath resolvedPath = resourcePath.completePath(*pPath);
-   FilePath candidatePath = resolvedPath.completeChildPath(kQuartoArch).completeChildPath(kPandocExe);
-   if (!candidatePath.exists())
-      candidatePath = resolvedPath.completeChildPath(kPandocExe);
+   //FilePath candidatePath = resolvedPath.completeChildPath(kQuartoArch).completeChildPath(kPandocExe);
+   //if (!candidatePath.exists())
+   FilePath  candidatePath = resolvedPath.completeChildPath(kPandocExe);
    *pPath = candidatePath.getParent().getAbsolutePath();
 }
 
