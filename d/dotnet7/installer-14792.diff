diff --git a/eng/SourceBuild.props b/eng/SourceBuild.props
index a2831d57455..9ebca97ff90 100644
--- a/eng/SourceBuild.props
+++ b/eng/SourceBuild.props
@@ -11,6 +11,7 @@
       <InnerBuildArgs>$(InnerBuildArgs) /p:IncludeNuGetPackageArchive=false</InnerBuildArgs>
       <InnerBuildArgs>$(InnerBuildArgs) /p:IncludeAdditionalSharedFrameworks=false</InnerBuildArgs>
       <InnerBuildArgs>$(InnerBuildArgs) /p:IncludeSharedFrameworksForBackwardsCompatibilityTests=false</InnerBuildArgs>
+      <InnerBuildArgs Condition="'$(SourceBuildUseMonoRuntime)' == 'true'">$(InnerBuildArgs) /p:DISABLE_CROSSGEN=true</InnerBuildArgs>
     </PropertyGroup>
   </Target>
 
diff --git a/src/SourceBuild/tarball/content/Directory.Build.props b/src/SourceBuild/tarball/content/Directory.Build.props
index 860785575f7..982fb7f0725 100644
--- a/src/SourceBuild/tarball/content/Directory.Build.props
+++ b/src/SourceBuild/tarball/content/Directory.Build.props
@@ -24,6 +24,11 @@
 
     <UseStableVersions Condition="'$(UseStableVersions)' == ''">false</UseStableVersions>
 
+    <SourceBuildUseMonoRuntime>false</SourceBuildUseMonoRuntime>
+    <!-- These architectures are only supported with mono runtime -->
+    <SourceBuildUseMonoRuntime Condition="'$(BuildArchitecture)' == 's390x'">true</SourceBuildUseMonoRuntime>
+    <SourceBuildUseMonoRuntime Condition="'$(BuildArchitecture)' == 'ppc64le'">true</SourceBuildUseMonoRuntime>
+
     <!-- new supported portable/nonportable options.  These control whether to build portable runtime
          or portable SDK.  The PortableBuild flag is only set in runtime-portable.proj and should
          no longer be passed in.  -->
diff --git a/src/SourceBuild/tarball/content/build.sh b/src/SourceBuild/tarball/content/build.sh
index e899d2f808c..25d5e1d22a6 100755
--- a/src/SourceBuild/tarball/content/build.sh
+++ b/src/SourceBuild/tarball/content/build.sh
@@ -9,6 +9,7 @@ usage() {
     echo "  --online                           build using online sources"
     echo "  --poison                           build with poisoning checks"
     echo "  --run-smoke-test                   don't build; run smoke tests"
+    echo "  --use-mono-runtime                 output uses the mono runtime"
     echo "  --with-packages <dir>              use the specified directory of previously-built packages"
     echo "  --with-sdk <dir>                   use the SDK in the specified directory for bootstrapping"
     echo "use -- to send the remaining arguments to MSBuild"
@@ -45,6 +46,9 @@ while :; do
             runningSmokeTests=true
             MSBUILD_ARGUMENTS+=( "/t:RunSmokeTest" )
             ;;
+        --use-mono-runtime)
+            MSBUILD_ARGUMENTS+=( "/p:SourceBuildUseMonoRuntime=true" )
+            ;;
         --with-packages)
             CUSTOM_PACKAGES_DIR="$(cd -P "$2" && pwd)"
             if [ ! -d "$CUSTOM_PACKAGES_DIR" ]; then
diff --git a/src/SourceBuild/tarball/content/repos/Directory.Build.props b/src/SourceBuild/tarball/content/repos/Directory.Build.props
index e4e3060af7f..04ab89d11dc 100644
--- a/src/SourceBuild/tarball/content/repos/Directory.Build.props
+++ b/src/SourceBuild/tarball/content/repos/Directory.Build.props
@@ -143,6 +143,7 @@
     <StandardSourceBuildArgs>$(StandardSourceBuildArgs) /p:AdditionalSourceBuiltNupkgCacheDir="$(SourceBuiltPackagesPath)"</StandardSourceBuildArgs>
     <StandardSourceBuildArgs>$(StandardSourceBuildArgs) /p:ReferencePackageNupkgCacheDir="$(ReferencePackagesDir)"</StandardSourceBuildArgs>
     <StandardSourceBuildArgs>$(StandardSourceBuildArgs) /p:PreviouslySourceBuiltNupkgCacheDir="$(PrebuiltSourceBuiltPackagesPath)"</StandardSourceBuildArgs>
+    <StandardSourceBuildArgs>$(StandardSourceBuildArgs) /p:SourceBuildUseMonoRuntime=$(SourceBuildUseMonoRuntime)</StandardSourceBuildArgs>
 
     <StandardSourceBuildCommand>$(ProjectDirectory)\build$(ShellExtension)</StandardSourceBuildCommand>
   </PropertyGroup>
