#!/bin/bash -e


mkdir glib_updated/

cd glib_updated/

PACKAGE_NAME=glib-feedstock
PACKAGE_URL=https://github.com/AnacondaRecipes/glib-feedstock.git
PACKAGE_VERSION=${1:-v2.78.4}


# Installing Miniconda

curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-ppc64le.sh
bash Miniconda*.sh -b -u
ln -s miniconda3/bin ~/bin


# Creating and activating conda environment

conda create -y -n glib-test python=3.10
conda init bash
source /root/.bashrc
conda activate glib-test


# Installing git

if ! yum install -y git; then
     echo "------------------git:install_fails---------------------------------------"
     exit 1
fi


# Cloning open-ce v1.10.0

if ! git clone -q https://github.com/open-ce/open-ce -b open-ce-v1.10.0; then
     echo "------------------open-ce:clone_fails---------------------------------------"
        echo "https://github.com/open-ce/open-ce open-ce"
        echo "open-ce  |  https://github.com/open-ce/open-ce |  1.10.0 | Linux | GitHub | Fail |  Clone_Fails"
        exit 1
fi


# Cloning open-ce-builder v13.0.0

if ! git clone -q https://github.com/open-ce/open-ce-builder -b v13.0.0; then
     echo "------------------open-ce-builder:clone_fails---------------------------------------"
        echo "https://github.com/open-ce/open-ce-builder open-ce-builder"
        echo "open-ce-builder  |  https://github.com/open-ce/open-ce-builder |  13.0.0 | Linux | GitHub | Fail |  Clone_Fails"
        exit 1
fi


# Installing open-ce-builder v13.0.0

if ! pip install -e open-ce-builder; then
     echo "------------------open-ce-builder:install_fails---------------------------------------"
     exit 1
fi


# Cloning glib v2.78.4

if ! git clone -q $PACKAGE_URL $PACKAGE_NAME; then
     echo "------------------$PACKAGE_NAME:clone_fails---------------------------------------"
        echo "$PACKAGE_URL $PACKAGE_NAME"
        echo "$PACKAGE_NAME  |  $PACKAGE_URL |  $PACKAGE_VERSION | Linux | GitHub | Fail |  Clone_Fails"
        exit 1
fi


cd $PACKAGE_NAME


# Modifying glib version (if required) present in /recipe/meta.yaml (Update the second occurrence of package version number)

#if ! sed -i.bak 's/{% set version = "2.78.4" %}/{% set version = "2.78.4" %}/g' "./recipe/meta.yaml"; then

#     echo "------------------meta.yaml file:file_modification_fails---------------------------------------"
#     exit 1
#fi


# Removing libffi version present in /recipe/meta.yaml

if ! sed -i.bak 's/libffi {{ libffi }}/libffi/g' "./recipe/meta.yaml"; then

     echo "------------------meta.yaml file:file_modification_fails---------------------------------------"
     exit 1
fi


# Installing conda-build

if ! conda install -y conda-build; then

     echo "------------------conda-build:install_fails---------------------------------------"
     exit 1
fi


# Building glib v2.78.4 .conda file

if ! open-ce build feedstock --python_version=3.10 --conda_build_config=../open-ce/envs/conda_build_config.yaml --output_folder=../output; then

     echo "------------------$PACKAGE_NAME:build_fails---------------------------------------"
     exit 1
fi


# Listing packages prior to installing glib v2.78.4

conda list

# Installing glib v2.78.4 via the .conda file

if ! conda install -y glib==2.78.4 -c file://glib_updated/output/; then

     echo "------------------l$PACKAGE_NAME $PACKAGE_VERSION:install_fails---------------------------------------"
     exit 1
fi


# Listing packages post installing glib v2.78.4

conda list