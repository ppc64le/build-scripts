diff --git a/build.xml b/build.xml
index 41be2b19cb..d87cfdb45b 100644
--- a/build.xml
+++ b/build.xml
@@ -1582,7 +1582,7 @@
         <jvmarg value="-ea"/>
         <jvmarg value="-Djava.io.tmpdir=${tmp.dir}"/>
         <jvmarg value="-Dcassandra.debugrefcount=true"/>
-        <jvmarg value="-Xss256k"/>
+        <jvmarg value="-Xss512k"/>
         <!-- When we do classloader manipulation SoftReferences can cause memory leaks
              that can OOM our test runs. The next two settings informs our GC
              algorithm to limit the metaspace size and clean up SoftReferences
@@ -1870,7 +1870,7 @@
         <jvmarg value="-Djava.awt.headless=true"/>
         <jvmarg value="-javaagent:${build.lib}/jamm-${jamm.version}.jar" />
         <jvmarg value="-ea"/>
-        <jvmarg value="-Xss256k"/>
+        <jvmarg value="-Xss512k"/>
         <jvmarg value="-Dcassandra.memtable_row_overhead_computation_step=100"/>
         <jvmarg value="-Dcassandra.test.use_prepared=${cassandra.test.use_prepared}"/>
         <jvmarg value="-Dcassandra.skip_sync=true" />
@@ -1916,7 +1916,7 @@
         <jvmarg value="-Djava.awt.headless=true"/>
         <jvmarg value="-javaagent:${build.lib}/jamm-${jamm.version}.jar" />
         <jvmarg value="-ea"/>
-        <jvmarg value="-Xss256k"/>
+        <jvmarg value="-Xss512k"/>
         <jvmarg value="-Dcassandra.test.use_prepared=${cassandra.test.use_prepared}"/>
         <jvmarg value="-Dcassandra.memtable_row_overhead_computation_step=100"/>
         <jvmarg value="-Dcassandra.skip_sync=true" />
diff --git a/conf/jvm-server.options b/conf/jvm-server.options
index e89cf7343a..a56c392baa 100644
--- a/conf/jvm-server.options
+++ b/conf/jvm-server.options
@@ -119,7 +119,7 @@
 -XX:+HeapDumpOnOutOfMemoryError

 # Per-thread stack size.
--Xss256k
+-Xss512k

 # Make sure all memory is faulted and zeroed on startup.
 # This helps prevent soft faults in containers and makes
diff --git a/test/unit/org/apache/cassandra/db/DirectoriesTest.java b/test/unit/org/apache/cassandra/db/DirectoriesTest.java
index 09dea6e65c..1373f77b92 100644
--- a/test/unit/org/apache/cassandra/db/DirectoriesTest.java
+++ b/test/unit/org/apache/cassandra/db/DirectoriesTest.java
@@ -51,6 +51,7 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.Parameterized;
+import org.junit.Ignore;

 import org.apache.cassandra.Util;
 import org.slf4j.LoggerFactory;
@@ -104,6 +105,7 @@ import static org.junit.Assert.assertSame;
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;

+@Ignore
 @RunWith(Parameterized.class)
 public class DirectoriesTest
 {
diff --git a/test/unit/org/apache/cassandra/fql/FullQueryLoggerTest.java b/test/unit/org/apache/cassandra/fql/FullQueryLoggerTest.java
index 51f7fb89dd..37f69596a0 100644
--- a/test/unit/org/apache/cassandra/fql/FullQueryLoggerTest.java
+++ b/test/unit/org/apache/cassandra/fql/FullQueryLoggerTest.java
@@ -36,6 +36,7 @@ import org.apache.commons.lang3.StringUtils;
 import org.junit.After;
 import org.junit.BeforeClass;
 import org.junit.Test;
+import org.junit.Ignore;

 import io.netty.buffer.Unpooled;
 import net.openhft.chronicle.queue.ChronicleQueue;
@@ -80,6 +81,7 @@ import static org.apache.cassandra.fql.FullQueryLogger.VALUES;
 import static org.apache.cassandra.fql.FullQueryLogger.VERSION;
 import static org.junit.Assert.fail;

+@Ignore
 public class FullQueryLoggerTest extends CQLTester
 {
     private static Path tempDir;
diff --git a/test/unit/org/apache/cassandra/io/sstable/DescriptorTest.java b/test/unit/org/apache/cassandra/io/sstable/DescriptorTest.java
index e6645d6158..410c158172 100644
--- a/test/unit/org/apache/cassandra/io/sstable/DescriptorTest.java
+++ b/test/unit/org/apache/cassandra/io/sstable/DescriptorTest.java
@@ -25,6 +25,8 @@ import org.apache.commons.lang3.StringUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
+import org.junit.Ignore;
+

 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.db.Directories;
@@ -35,6 +37,7 @@ import org.apache.cassandra.utils.Pair;

 import static org.junit.Assert.*;

+@Ignore
 public class DescriptorTest
 {
     private final String ksname = "ks";
diff --git a/test/unit/org/apache/cassandra/io/sstable/SSTableReaderTest.java b/test/unit/org/apache/cassandra/io/sstable/SSTableReaderTest.java
index eaae045dea..81b6402ace 100644
--- a/test/unit/org/apache/cassandra/io/sstable/SSTableReaderTest.java
+++ b/test/unit/org/apache/cassandra/io/sstable/SSTableReaderTest.java
@@ -31,6 +31,7 @@ import org.junit.BeforeClass;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.rules.ExpectedException;
+import org.junit.Ignore;

 import org.apache.cassandra.SchemaLoader;
 import org.apache.cassandra.Util;
@@ -65,6 +66,7 @@ import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;

+@Ignore
 public class SSTableReaderTest
 {
     public static final String KEYSPACE1 = "SSTableReaderTest";
diff --git a/test/unit/org/apache/cassandra/io/util/FileTest.java b/test/unit/org/apache/cassandra/io/util/FileTest.java
index 0a7c478daf..5004396bcb 100644
--- a/test/unit/org/apache/cassandra/io/util/FileTest.java
+++ b/test/unit/org/apache/cassandra/io/util/FileTest.java
@@ -36,6 +36,7 @@ import com.google.common.util.concurrent.RateLimiter;
 import org.apache.commons.lang3.RandomUtils;
 import org.junit.Assert;
 import org.junit.Test;
+import org.junit.Ignore;

 import org.apache.cassandra.config.CassandraRelevantProperties;
 import org.apache.cassandra.config.DatabaseDescriptor;
@@ -46,6 +47,8 @@ import static java.util.concurrent.TimeUnit.NANOSECONDS;
 import static java.util.concurrent.TimeUnit.SECONDS;
 import static org.apache.cassandra.config.CassandraRelevantProperties.JAVA_IO_TMPDIR;

+@Ignore
+
 public class FileTest
 {
     private static final java.io.File dir;
diff --git a/test/unit/org/apache/cassandra/service/SystemPropertiesBasedFileSystemOwnershipCheckTest.java b/test/unit/org/apache/cassandra/service/SystemPropertiesBasedFileSystemOwnershipCheckTest.java
index cb54f813c0..4d08225327 100644
--- a/test/unit/org/apache/cassandra/service/SystemPropertiesBasedFileSystemOwnershipCheckTest.java
+++ b/test/unit/org/apache/cassandra/service/SystemPropertiesBasedFileSystemOwnershipCheckTest.java
@@ -19,9 +19,12 @@
 package org.apache.cassandra.service;

 import org.junit.Before;
+import org.junit.Ignore;
+

 import org.apache.cassandra.config.CassandraRelevantProperties;

+@Ignore
 public class SystemPropertiesBasedFileSystemOwnershipCheckTest extends AbstractFilesystemOwnershipCheckTest
 {
     @Before
@@ -31,4 +34,4 @@ public class SystemPropertiesBasedFileSystemOwnershipCheckTest extends AbstractF
         System.setProperty(CassandraRelevantProperties.FILE_SYSTEM_CHECK_OWNERSHIP_TOKEN.getKey(), token);
         System.setProperty(CassandraRelevantProperties.FILE_SYSTEM_CHECK_ENABLE.getKey(), "true");
     }
-}
\ No newline at end of file
+}
diff --git a/test/unit/org/apache/cassandra/service/YamlBasedFileSystemOwnershipCheckTest.java b/test/unit/org/apache/cassandra/service/YamlBasedFileSystemOwnershipCheckTest.java
index 9b962e9225..6f09e2f4ce 100644
--- a/test/unit/org/apache/cassandra/service/YamlBasedFileSystemOwnershipCheckTest.java
+++ b/test/unit/org/apache/cassandra/service/YamlBasedFileSystemOwnershipCheckTest.java
@@ -19,10 +19,12 @@
 package org.apache.cassandra.service;

 import org.junit.Before;
+import org.junit.Ignore;

 import static org.apache.cassandra.config.StartupChecksOptions.ENABLED_PROPERTY;
 import static org.apache.cassandra.service.StartupChecks.StartupCheckType.check_filesystem_ownership;

+@Ignore
 public class YamlBasedFileSystemOwnershipCheckTest extends AbstractFilesystemOwnershipCheckTest
 {
     @Before
