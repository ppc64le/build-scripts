diff --git a/Makefile.core.mk b/Makefile.core.mk
index 6d97916..d3d7d2f 100644
--- a/Makefile.core.mk
+++ b/Makefile.core.mk
@@ -39,7 +39,7 @@ endif
 
 UNAME := $(shell uname)
 ifeq ($(UNAME),Linux)
-BAZEL_CONFIG_DEV  = --config=libc++
+BAZEL_CONFIG_DEV  =
 BAZEL_CONFIG_REL  = --config=libc++ --config=release
 BAZEL_CONFIG_ASAN = --config=libc++ --config=clang-asan
 BAZEL_CONFIG_TSAN = --config=libc++ --config=clang-tsan
diff --git a/WORKSPACE b/WORKSPACE
index f61a058..558e5e3 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -20,7 +20,6 @@ workspace(name = "io_istio_proxy")
 load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 load(
     "//:repositories.bzl",
-    "docker_dependencies",
     "googletest_repositories",
     "mixerapi_dependencies",
 )
@@ -49,6 +48,9 @@ http_archive(
     sha256 = ENVOY_SHA256,
     strip_prefix = "envoy-" + ENVOY_SHA,
     url = "https://github.com/istio/envoy/archive/" + ENVOY_SHA + ".tar.gz",
+    patches = [
+        "//patches:wee8_genrule_cmd.patch",
+    ],
 )
 
 # TODO(silentdai) Use bazel args to select envoy between local or http
@@ -74,41 +76,3 @@ load("@envoy//bazel:dependency_imports.bzl", "envoy_dependency_imports")
 
 envoy_dependency_imports()
 
-# Docker dependencies
-
-docker_dependencies()
-
-load(
-    "@io_bazel_rules_docker//repositories:repositories.bzl",
-    container_repositories = "repositories",
-)
-
-container_repositories()
-
-load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")
-
-container_deps()
-
-load(
-    "@io_bazel_rules_docker//container:container.bzl",
-    "container_pull",
-)
-
-container_pull(
-    name = "distroless_cc",
-    # Latest as of 10/21/2019. To update, remove this line, re-build, and copy the suggested digest.
-    digest = "sha256:86f16733f25964c40dcd34edf14339ddbb2287af2f7c9dfad88f0366723c00d7",
-    registry = "gcr.io",
-    repository = "distroless/cc",
-)
-
-container_pull(
-    name = "bionic",
-    # Latest as of 10/21/2019. To update, remove this line, re-build, and copy the suggested digest.
-    digest = "sha256:3e83eca7870ee14a03b8026660e71ba761e6919b6982fb920d10254688a363d4",
-    registry = "index.docker.io",
-    repository = "library/ubuntu",
-    tag = "bionic",
-)
-
-# End of docker dependencies
diff --git a/extensions/stats/plugin_test.cc b/extensions/stats/plugin_test.cc
index 05096c9..556c5f3 100644
--- a/extensions/stats/plugin_test.cc
+++ b/extensions/stats/plugin_test.cc
@@ -42,21 +42,38 @@ namespace Stats {
 
 TEST(IstioDimensions, Hash) {
   IstioDimensions d1;
-  IstioDimensions d2{.request_protocol = "grpc"};
-  IstioDimensions d3{.request_protocol = "grpc", .response_code = "200"};
-  IstioDimensions d4{.request_protocol = "grpc", .response_code = "400"};
-  IstioDimensions d5{.request_protocol = "grpc", .source_app = "app_source"};
-  IstioDimensions d6{.request_protocol = "grpc",
-                     .source_app = "app_source",
-                     .source_version = "v2"};
-  IstioDimensions d7{.outbound = true,
-                     .request_protocol = "grpc",
-                     .source_app = "app_source",
-                     .source_version = "v2"};
-  IstioDimensions d8{.outbound = true,
-                     .request_protocol = "grpc",
-                     .source_app = "app_source",
-                     .source_version = "v2"};
+  IstioDimensions d2;
+  d2.request_protocol = "grpc";
+
+  IstioDimensions d3;
+  d3.request_protocol = "grpc";
+  d3.response_code = "200";
+
+  IstioDimensions d4;
+  d4.request_protocol = "grpc";
+  d4.response_code = "400";
+
+  IstioDimensions d5;
+  d5.request_protocol = "grpc";
+  d5.source_app = "app_source";
+
+  IstioDimensions d6;
+  d6.request_protocol = "grpc";
+  d6.source_app = "app_source";
+  d6.source_version = "v2";
+
+  IstioDimensions d7;
+  d7.outbound = true;
+  d7.request_protocol = "grpc";
+  d7.source_app = "app_source";
+  d7.source_version = "v2";
+
+  IstioDimensions d8;
+  d8.outbound = true;
+  d8.request_protocol = "grpc";
+  d8.source_app = "app_source";
+  d8.source_version = "v2";
+
   // Must be unique except for d7 and d8.
   std::set<size_t> hashes;
   hashes.insert(IstioDimensions::HashIstioDimensions()(d1));
diff --git a/tools/docker/BUILD b/tools/docker/BUILD
deleted file mode 100644
index f0c5fff..0000000
--- a/tools/docker/BUILD
+++ /dev/null
@@ -1,53 +0,0 @@
-# Copyright 2019 Istio Authors. All Rights Reserved.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#    http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-################################################################################
-#
-load("@io_bazel_rules_docker//container:image.bzl", "container_image")
-load(
-    "@io_bazel_rules_docker//container:container.bzl",
-    "container_push",
-)
-
-container_image(
-    name = "envoy_distroless",
-    base = "@distroless_cc//image",
-    tags = ["manual"],
-    tars = ["//src/envoy:envoy_tar"],
-)
-
-container_image(
-    name = "envoy_ubuntu",
-    base = "@bionic//image",
-    tags = ["manual"],
-    tars = ["//src/envoy:envoy_tar"],
-)
-
-container_push(
-    name = "push_envoy_distroless",
-    format = "Docker",
-    image = ":envoy_distroless",
-    registry = "gcr.io",
-    repository = "{DOCKER_REPOSITORY}",
-    tag = "{BUILD_CONFIG}-{BUILD_SCM_REVISION}",
-)
-
-container_push(
-    name = "push_envoy_ubuntu",
-    format = "Docker",
-    image = ":envoy_ubuntu",
-    registry = "gcr.io",
-    repository = "{DOCKER_REPOSITORY}",
-    tag = "ubuntu-{BUILD_CONFIG}-{BUILD_SCM_REVISION}",
-)
