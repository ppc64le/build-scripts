name: Currency Build

on:
  workflow_dispatch:
    branches:
      - master

env:
  ENABLE_TRIVY: true
  ENABLE_SYFT: true
  ENABLE_GRYPE: true

jobs:
  build_info:
    runs-on: ubuntu-24.04-ppc64le
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          sudo apt update -y
          sudo apt install -y jq
          jq --version

      - name: Get Build Info
        run: |
          chmod +x ./script/read_buildinfo.sh
          bash ./script/read_buildinfo.sh
          echo "VARIABLE_SH_CONTENT<<EOF" >> $GITHUB_ENV
          cat variable.sh >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

  build:
    needs: build_info
    if: env.VALIDATE_BUILD_SCRIPT == 'true'
    runs-on: ubuntu-24.04-ppc64le
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Variables
        run: |
          echo "$VARIABLE_SH_CONTENT" > variable.sh
          source variable.sh

      - name: Build Package
        run: |
          mkdir package-cache
          sudo mv variable.sh package-cache
          chmod +x ./script/build_package.sh
          bash ./script/build_package.sh
          cloned_package=$(ls -td -- */ | head -n 1)
          sudo mv "$cloned_package" package-cache
          echo "export CLONED_PACKAGE=\"$cloned_package\"" >> package-cache/variable.sh
          cd package-cache
          sudo chown $USER:$USER -R .
          ls -ltr
          chmod +x ../script/pre_process.sh
          bash ../script/pre_process.sh
          cd $GITHUB_WORKSPACE
          gzip build_log
          chmod +x ./script/upload-scripts/upload_file.sh
          bash ./script/upload-scripts/upload_file.sh build_log.gz

  wheel_build:
    needs: build
    if: env.WHEEL_BUILD == 'true'
    runs-on: ubuntu-24.04-ppc64le
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12, 3.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load Variables
        run: |
          echo "$VARIABLE_SH_CONTENT" > variable.sh
          source variable.sh

      - name: Build Wheel
        run: |
          chmod +x ./script/build_wheels.sh
          bash ./script/build_wheels.sh
          WHEEL_FILE=*.whl
          chmod +x ./script/upload-scripts/upload_wheel.sh
          bash ./script/upload-scripts/upload_wheel.sh $WHEEL_FILE

  source_scanner:
    needs: build
    if: env.VALIDATE_BUILD_SCRIPT == 'true'
    runs-on: ubuntu-24.04-ppc64le
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Variables
        run: |
          echo "$VARIABLE_SH_CONTENT" > variable.sh
          source variable.sh

      - name: Run Trivy Scan
        if: env.ENABLE_TRIVY == 'true'
        run: |
          chmod +x ./script/scanner-scripts/trivy_code_scan.sh
          bash ./script/scanner-scripts/trivy_code_scan.sh
          mkdir source_trivy
          mv package-cache/trivy_source_vulnerabilities_results.json package-cache/trivy_source_sbom_results.cyclonedx source_trivy

      - name: Run Syft Scan
        if: env.ENABLE_SYFT == 'true'
        run: |
          chmod +x ./script/scanner-scripts/syft_code_scan.sh
          bash ./script/scanner-scripts/syft_code_scan.sh
          mkdir source_syft
          mv package-cache/syft_source_sbom_results.json source_syft

      - name: Run Grype Scan
        if: env.ENABLE_GRYPE == 'true'
        run: |
          chmod +x ./script/scanner-scripts/grype_code_scan.sh
          bash ./script/scanner-scripts/grype_code_scan.sh
          mkdir source_grype
          mv package-cache/grype_source_sbom_results.json package-cache/grype_source_vulnerabilities_results.json source_grype

      - name: Upload Scanner Results
        run: |
          mkdir source
          find source_trivy -mindepth 1 -exec mv -t source {} + 2>/dev/null || true
          find source_syft -mindepth 1 -exec mv -t source {} + 2>/dev/null || true
          find source_grype -mindepth 1 -exec mv -t source {} + 2>/dev/null || true
          tar cvzf source_scanner.tar.gz source
          chmod +x ./script/upload-scripts/upload_file.sh
          bash ./script/upload-scripts/upload_file.sh source_scanner.tar.gz

  docker_build:
    needs: build
    if: env.BUILD_DOCKER == 'true'
    runs-on: ubuntu-24.04-ppc64le
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Variables
        run: |
          echo "$VARIABLE_SH_CONTENT" > variable.sh
          source variable.sh

      - name: Build Docker Image
        run: |
          chmod +x ./script/build_docker.sh
          bash ./script/build_docker.sh
          echo "printing docker images"
          docker images

      - name: Upload Docker Image
        run: |
          chmod +x ./script/upload-scripts/upload_docker_image.sh
          bash ./script/upload-scripts/upload_docker_image.sh

  image_scanner:
    needs: docker_build
    if: env.BUILD_DOCKER == 'true'
    runs-on: ubuntu-24.04-ppc64le
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Variables
        run: |
          echo "$VARIABLE_SH_CONTENT" > variable.sh
          source variable.sh

      - name: Load Docker Image
        run: |
          docker load -i "$HOME/build/$GITHUB_REPOSITORY/image.tar"

      - name: Run Trivy Image Scan
        if: env.ENABLE_TRIVY == 'true'
        run: |
          chmod +x ./script/scanner-scripts/trivy_image_scan.sh
          bash ./script/scanner-scripts/trivy_image_scan.sh
          mkdir image_trivy
          mv trivy_image_vulnerabilities_results.json trivy_image_sbom_results.cyclonedx image_trivy

      - name: Run Syft Image Scan
        if: env.ENABLE_SYFT == 'true'
        run: |
          chmod +x ./script/scanner-scripts/syft_image_scan.sh
          bash ./script/scanner-scripts/syft_image_scan.sh
          mkdir image_syft
          mv syft_image_sbom_results.json image_syft

      - name: Run Grype Image Scan
        if: env.ENABLE_GRYPE == 'true'
        run: |
          chmod +x ./script/scanner-scripts/grype_image_scan.sh
          bash ./script/scanner-scripts/grype_image_scan.sh
          mkdir image_grype
          mv grype_image_sbom_results.json grype_image_vulnerabilities_results.json image_grype

      - name: Upload Image Scanner Results
        run: |
          mkdir image
          find image_trivy -mindepth 1 -exec mv -t image {} + 2>/dev/null || true
          find image_syft -mindepth 1 -exec mv -t image {} + 2>/dev/null || true
          find image_grype -mindepth 1 -exec mv -t image {} + 2>/dev/null || true
          tar cvzf image_scanner.tar.gz image
          chmod +x ./script/upload-scripts/upload_file.sh
          bash ./script/upload-scripts/upload_file.sh image_scanner.tar.gz

