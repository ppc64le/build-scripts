# ----------------------------------------------------------------------------
#
# Package             : dateutil
# Source Repo         : https://github.com/dateutil/dateutil
# Travis Job Link     : https://travis-ci.com/github/gururajrkatti/dateutil
# Created travis.yml  : No
# Maintainer          : Gururaj R Katti <Gururaj.Katti@ibm.com>
#
# Script License      : Apache License, Version 2 or later
#
# ----------------------------------------------------------------------------

language: python
cache: pip
python:
  - "2.7"
  - "3.4"
  - "3.5"
  - "3.6"
  - "3.7"
  - "3.8"
  - "3.9-dev"
  - "nightly"
env: TOXENV=py

matrix:
  fast_finish: true
  include:
    - python: 3.3
      # This is required to run Python 3.3 on Travis
      dist: trusty
      env: TOXENV=py33 # Needed because "py" won't invoke testenv:py33
    - python: 3.6
      env: TOXENV=docs
    - python: 3.6
      env: TOXENV=tz
    - python: 3.7
      env: TOXENV=build
  # Power jobs
    - python: 3.6
      env: TOXENV=docs
      arch: ppc64le
    - python: 3.6
      env: TOXENV=tz
      arch: ppc64le
    - python: 3.7
      env: TOXENV=build
      arch: ppc64le
    - python: 2.7
      arch: ppc64le
      env: TOXENV=py
    - python: 3.4
      arch: ppc64le
      env: TOXENV=py
    - python: 3.5
      arch: ppc64le
      env: TOXENV=py
    - python: 3.6
      arch: ppc64le
      env: TOXENV=py
    - python: 3.7
      arch: ppc64le
      env: TOXENV=py
    - python: 3.8
      arch: ppc64le
      env: TOXENV=py
    - python: 3.9-dev
      arch: ppc64le
      env: TOXENV=py
    - python: nightly
      arch: ppc64le
      env: TOXENV=py
  allow_failures:
    - python: "nightly"
    - python: 3.4
    - env: TOXENV=tz

install:
  - |
    if [[ $TRAVIS_PYTHON_VERSION == "3.3" ]]; then
      pip install -U "pip==10.0.1"
      PIP_ARGS="-c requirements/3.3/constraints.txt"
    fi
  - pip install -U "tox<3.8.0" $PIP_ARGS
  - if [[ $TOXENV == "py" ]]; then ./ci_tools/retry.sh python updatezinfo.py; fi

script:
  - tox
  - |
    if [[ $TOXENV == "build" ]]; then
      exactly_one() {
        value=$(find dist -iname $1 | wc -l)
        if [ $value -ne 1 ]; then
          echo "Found $value instances of $1, not 1"
          return 1
        else
          echo "Found exactly 1 instance of $value"
        fi
      }
      # Check that exactly one tarball and one wheel are created
      exactly_one '*.tar.gz'
      exactly_one '*.whl'
    fi
after_success:
  - if [[ $TOXENV == "py" ]]; then tox -e coverage,codecov; fi
